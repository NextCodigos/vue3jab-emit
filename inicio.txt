  npm create vue@latest
  cd vue3jab
  npm install
  npm run dev

/////////////////////////////////////////

ejemplo 1:

Metodo Emit 

App.vue

<template>
<div>
  <h1>Padre:</h1>
  <HijoVue :nombre="nombre" :edad="edad"/>
</div>
</template>


<script setup>
  // import HelloWorld from './components/HelloWorld.vue'
  import { ref } from 'vue'
  import HijoVue from './components/Hijo.vue'

  connst nombre = ref('JAB');
  const edad=ref(18);
</script>

<style scoped>

</style>


/////////////

Hijo.vue

<template>
  <div>
    <!-- Muestra el título "Hijo" -->
    <h1>Hijo:</h1>
    <!-- Muestra el nombre y edad recibidos como propiedades -->
    <h2>Te llamas {{ nombre }} y tienes {{ edad }} años.</h2>
    <!-- Botón para llamar a la función "enviar" -->
    <button @click="enviar">Cambiar valores</button>
    </div>
</template>

<script setup>
// import HelloWorld from './components/HelloWorld.vue'
// Importa la función "defineEmits" para definir eventos personalizados
const emit = defineEmits(['modificar'])
// Función para emitir el evento "modificar" con nuevos valores
const enviar = () => {
  emit('modificar', 'VUE', 9)
}

// Define las propiedades nombre y edad que este componente espera recibir
const props = defineProps({
  nombre: String,
  edad: Number,
})
</script>

<style scoped></style>

// Este archivo es un componente único de Vue que define la plantilla, configuración de script y estilos con ámbito para el componente HijoVue
// La sección de configuración de script importa las funciones defineEmits y defineProps de Vue
// Define una función enviar que emite un evento 'modificar' con los valores 'VUE' y 9
// También define props para nombre y edad utilizando defineProps
// La sección de plantilla renderiza el componente HijoVue con las props nombre y edad, y un botón que activa la función enviar
// La sección de estilos con ámbito contiene estilos que solo se aplican a este componente

/////////////////////////////////////////
/////////////////////////////////////////

App.vue

<template>
   <div>
      <!-- Muestra el título "Padre" -->
      <h1>Padre:</h1>
      <!-- Llama al componente HijoVue y pasa las propiedades nombre y edad, y maneja el evento modificar -->
      
    <HijoVue :nombre="nombre" :edad="edad" @modificar="cambiarValor" />
     
  </div>
</template>

<script setup>
// import HelloWorld from './components/HelloWorld.vue'
import { ref } from 'vue'
import HijoVue from './components/Hijo.vue'

// Función para cambiar el valor de nombre y edad
const cambiarValor = (valor1, valor2) => {
  nombre.value = valor1;
  edad.value = valor2
}

// Define las variables reactivas nombre y edad
const nombre = ref('JAB');
const edad = ref(18);
</script>

<style scoped></style>

MINUTO 9

/////////////////////////////////////////
/////////////////////////////////////////

HAGO ANTERIOR  CON aPP.VUE Y HIJO.VUE en este toda la logica en App.vue:


2 Metodo inyection:

App.vue

<template>
  <div>
    <HijoVue />
  </div>
</template>

<script setup>
import HijoVue from './components/Hijo.vue';
</script>


////////////

Hijo.vue

<template>
  <div>
    <h1>Padre:</h1>
    <h2 v-if="showPadre">{{ nombrePadre }}</h2> <!-- Mostrar nombre del padre si showPadre es verdadero -->
    <h2 v-if="showPadre">{{ edadPadre }}</h2> <!-- Mostrar edad del padre si showPadre es verdadero -->
    <h1>Hijo:</h1>
    <h2>{{ nombre }}</h2>
    <h2>{{ edad }}</h2>
    <button @click="cambiarValoresHijo">Cambiar valores hijo</button>
    <button @click="cambiarValoresPadre">Cambiar valores padre</button>
  </div>
</template>

<script setup>
import { ref } from 'vue';
// Código JavaScript del componente

// Definir variable reactiva para el nombre del hijo
const nombre = ref('JAB');

// Definir variable reactiva para la edad del hijo
const edad = ref(18);

// Definir variable reactiva para el nombre del padre
const nombrePadre = ref('Nombre inicial padre');

// Definir variable reactiva para la edad del padre
const edadPadre = ref(30);

// Definir variable reactiva para controlar la visibilidad del padre
const showPadre = ref(true);

// Definir variable reactiva para controlar la visibilidad del hijo
const showHijo = ref(true);

// Función para cambiar los valores del hijo
const cambiarValoresHijo = () => {
  // Cambiar nombre del hijo
  nombre.value = nombre.value === 'JAB' ? 'Nuevo nombre hijo' : 'JAB';

  // Cambiar edad del hijo
  edad.value = edad.value === 18 ? 20 : 18;

  // Alternar visibilidad del hijo
  showHijo.value = !showHijo.value;
};

// Función para cambiar los valores del padre
const cambiarValoresPadre = () => {
  // Cambiar nombre del padre
  nombrePadre.value = nombrePadre.value === 'Nombre inicial padre' ? 'Nuevo nombre padre' : 'Nombre inicial padre';

  // Cambiar edad del padre
  edadPadre.value = edadPadre.value === 30 ? 35 : 30;

  // Siempre establecer showPadre como verdadero al cambiar los valores del padre
  showPadre.value = true;
};

// Código listo para ser utilizado

// Cambiar nombre del hijo:

// La línea nombre.value === 'JAB' comprueba si el valor actual de la variable nombre es igual a "JAB".
// Si es verdadero, el valor de nombre se cambia a "Nuevo nombre hijo".
// Si es falso, el valor de nombre se cambia a "JAB".
// En resumen, esta línea cambia el nombre del hijo entre "JAB" y "Nuevo nombre hijo" cada vez que se llama a la función cambiarValoresHijo.

// 2. Cambiar edad del hijo:

// La línea edad.value === 18 comprueba si el valor actual de la variable edad es igual a 18.
// Si es verdadero, el valor de edad se cambia a 20.
// Si es falso, el valor de edad se cambia a 18.
// En resumen, esta línea cambia la edad del hijo entre 18 y 20 cada vez que se llama a la función cambiarValoresHijo.

// En conjunto, estas dos líneas de código se encargan de cambiar los valores del hijo(nombre y edad) cada vez que se pulsa el botón "Cambiar valores hijo".

//   Ejemplo:
// Si el nombre actual del hijo es "JAB" y la edad actual es 18, al pulsar el botón:

// El nombre del hijo cambiará a "Nuevo nombre hijo".
// La edad del hijo cambiará a 20.
// Si el nombre actual del hijo es "Nuevo nombre hijo" y la edad actual es 20, al pulsar el botón:

// El nombre del hijo cambiará a "JAB".
// La edad del hijo cambiará a 18.

</script>




/////////////////////////////////////////
/////////////////////////////////////////

Añado boton con v-on y v-if para mostrar mensage 
con h3


Hijo.vue

<template>
  <div>
    <h1>Padre:</h1>
    <h2 v-if="showPadre">{{ nombrePadre }}</h2> <!-- Mostrar nombre del padre si showPadre es verdadero -->
    <h2 v-if="showPadre">{{ edadPadre }}</h2> <!-- Mostrar edad del padre si showPadre es verdadero -->
    <h3 v-if="isVisiblemessagePadre">{{ messagePadre }}</h3>
    <button v-on:click="$event => isVisiblemessagePadre = !isVisiblemessagePadre">Toogle Visibility</button>
    <h1>Hijo:</h1>
    <h2>{{ nombre }}</h2>
    <h2>{{ edad }}</h2>
    <button @click="cambiarValoresHijo">Cambiar valores hijo</button>
    <button @click="cambiarValoresPadre">Cambiar valores padre</button>
    <h3 v-if="isVisiblemessageHijo">{{ messageHijo }}</h3>
    <button v-on:click="$event => isVisiblemessageHijo = !isVisiblemessageHijo">Toogle Visibility</button>
  </div>
</template>

<script setup>
import { ref } from 'vue';
// Código JavaScript del componente

// Definir variable reactiva para el nombre del hijo
const nombre = ref('JAB');

// Definir variable reactiva para la edad del hijo
const edad = ref(18);

// Definir variable reactiva para el nombre del padre
const nombrePadre = ref('Nombre inicial padre');

// Definir variable reactiva para la edad del padre
const edadPadre = ref(30);

// Definir variable reactiva para controlar la visibilidad del padre
const showPadre = ref(true);

// Definir variable reactiva para controlar la visibilidad del hijo
const showHijo = ref(true);

// Función para cambiar los valores del hijo
const cambiarValoresHijo = () => {
  // Cambiar nombre del hijo
  nombre.value = nombre.value === 'JAB' ? 'Nuevo nombre hijo' : 'JAB';

  // Cambiar edad del hijo
  edad.value = edad.value === 18 ? 20 : 18;

  // Alternar visibilidad del hijo
  showHijo.value = !showHijo.value;
};

// Función para cambiar los valores del padre
const cambiarValoresPadre = () => {
  // Cambiar nombre del padre
  nombrePadre.value = nombrePadre.value === 'Nombre inicial padre' ? 'Nuevo nombre padre' : 'Nombre inicial padre';

  // Cambiar edad del padre
  edadPadre.value = edadPadre.value === 30 ? 35 : 30;

  // Siempre establecer showPadre como verdadero al cambiar los valores del padre
  showPadre.value = true;
};
const messagePadre = ref('initial value');
const messageHijo = ref('initial value');


// Definir variable reactiva para controlar la visibilidad del padre
const isVisiblemessagePadre = ref(true);

// Definir variable reactiva para controlar la visibilidad del hijo
const isVisiblemessageHijo = ref(true);

// Código listo para ser utilizado

// Cambiar nombre del hijo:

// La línea nombre.value === 'JAB' comprueba si el valor actual de la variable nombre es igual a "JAB".
// Si es verdadero, el valor de nombre se cambia a "Nuevo nombre hijo".
// Si es falso, el valor de nombre se cambia a "JAB".
// En resumen, esta línea cambia el nombre del hijo entre "JAB" y "Nuevo nombre hijo" cada vez que se llama a la función cambiarValoresHijo.

// 2. Cambiar edad del hijo:

// La línea edad.value === 18 comprueba si el valor actual de la variable edad es igual a 18.
// Si es verdadero, el valor de edad se cambia a 20.
// Si es falso, el valor de edad se cambia a 18.
// En resumen, esta línea cambia la edad del hijo entre 18 y 20 cada vez que se llama a la función cambiarValoresHijo.

// En conjunto, estas dos líneas de código se encargan de cambiar los valores del hijo(nombre y edad) cada vez que se pulsa el botón "Cambiar valores hijo".

//   Ejemplo:
// Si el nombre actual del hijo es "JAB" y la edad actual es 18, al pulsar el botón:

// El nombre del hijo cambiará a "Nuevo nombre hijo".
// La edad del hijo cambiará a 20.
// Si el nombre actual del hijo es "Nuevo nombre hijo" y la edad actual es 20, al pulsar el botón:

// El nombre del hijo cambiará a "JAB".
// La edad del hijo cambiará a 18.

</script>



/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////
/////////////////////////////////////////





/////////////////////////////////////////